{"version":3,"sources":["utils/index.js","store/actions/action-types.js","store/actions/index.js","components/todo-list/item/Item.js","components/todo-list/footer/Footer.js","components/todo-list/list/List.js","components/todo-list/index.js","App.js","serviceWorker.js","store/reducers/index.js","store/index.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","storage","setJSON","key","value","arguments","length","undefined","result","JSON","stringify","localStorage","setItem","getJSON","cache","getItem","eval","parse","action_types","actions","addTodo","payload","type","actionTypes","toggleComplete","updateTodo","deleteTodo","clearCompleted","toggleAllTodos","Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","index","handleDoubleClick","bind","assertThisInitialized","handleInputChange","handleOnBlur","handleDelete","handleToggleComplete","handleOnKeyUp","setState","editing","e","target","event","id","data","keyCode","_this2","react_default","a","createElement","className","onDoubleClick","ref","input","onChange","autoFocus","onKeyUp","onBlur","complete","onClick","children","Component","connect","objectSpread","filters","text","Footer","handleFilter","handleClearComplete","onTabChange","onClearComplete","_this$props","leftCount","todos","activeFilter","completedCount","filter","todo","map","concat","all","active","completed","List","inputValue","IsInputFocus","isCheckAll","onInputChange","onInputKeyUp","handleAddTodo","filteredTodos","handleToggleTab","toggleCheckAll","trim","Date","getTime","placeholder","item","item_Item","assign","footer_Footer","TodoList","App","todoList","todo_list","list","Boolean","window","location","hostname","match","setStorage","reducer","action","toConsumableArray","store","createStore","compose","applyMiddleware","thunk","devToolsExtension","f","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d84b2675.chunk.js","sourcesContent":["//localStorage存储object类型的封装\nexport const storage = {\n  setJSON: (key, value = {}) => {\n    const result = JSON.stringify(value);\n    localStorage.setItem(key, result);\n  },\n\n  getJSON: key => {\n    const cache = localStorage.getItem(key);\n    const result =\n      // eslint-disable-next-line no-eval\n      (cache && typeof eval(cache) === \"object\" && JSON.parse(cache)) || null;\n    return result;\n  }\n};\n","export default {\n  ADD_TODO : 'ADD_TODO',\n  TOGGLE_COMPLETE : 'TOGGLE_COMPLETE',\n  UPDATE_TODO :'UPDATE_TODO',\n  DELETE_TODO: 'DELETE_TODO',\n  CLEAR_COMPLETE: 'CLEAR_COMPLETE',\n  TOGGLE_ALL : 'TOGGLE_ALL'\n}","import actionTypes from './action-types'\n\nconst actions = {\n  addTodo: (payload) => {\n    return {\n      type: actionTypes.ADD_TODO,\n      payload\n    }\n  },\n\n\n  toggleComplete: (payload) => {\n    return {\n      type: actionTypes.TOGGLE_COMPLETE,\n      payload\n    }\n  },\n\n  updateTodo: (payload) => {\n    return {\n      type: actionTypes.UPDATE_TODO,\n      payload\n    }\n  },\n\n  deleteTodo: (payload) => {\n    return {\n      type: actionTypes.DELETE_TODO,\n      payload\n    }\n  },\n\n  clearCompleted: (payload) => {\n    return {\n      type: actionTypes.CLEAR_COMPLETE,\n      payload\n    }\n  },\n\n  toggleAllTodos: (payload) => {\n    return {\n      type: actionTypes.TOGGLE_ALL,\n      payload\n    }\n  }\n\n}\n\nexport default actions;","import React, { Component } from \"react\";\nimport \"./item.scss\";\nimport actions from \"../../../store/actions\";\nimport { connect } from \"react-redux\";\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      index: this.props.index\n    };\n\n    this.handleDoubleClick = this.handleDoubleClick.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleOnBlur = this.handleOnBlur.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleToggleComplete = this.handleToggleComplete.bind(this);\n    this.handleOnKeyUp = this.handleOnKeyUp.bind(this);\n  }\n\n  handleDoubleClick() {\n    this.setState({\n      editing: true\n    });\n  }\n\n  handleOnBlur(e) {\n    this.setState({\n      editing: false\n    });\n    const value = e.target.value;\n    if(value) {\n      this.handleInputChange(e);\n    } else {\n      this.handleDelete()\n    }\n  }\n\n  handleInputChange(event) {\n    this.props.updateTodo({\n      value: event.target.value,\n      id: this.props.data.id\n    });\n  }\n\n  handleDelete() {\n    this.props.deleteTodo(this.props.data);\n  }\n\n  handleToggleComplete() {\n    this.props.toggleComplete(this.props.data);\n  }\n\n  handleOnKeyUp(e) {\n    if (e.keyCode !== 13) {\n      return false;\n    }\n    this.handleOnBlur(e);\n  }\n\n  render() {\n    const { editing } = this.state;\n    const { data } = this.props;\n    // 非编辑状态\n    if (!editing) {\n      return (\n        <div\n          className={\n            this.props.data.complete\n              ? \"todo-list-item checked\"\n              : \"todo-list-item\"\n          }\n          onDoubleClick={this.handleDoubleClick}\n        >\n          <label\n            className=\"item-check-dot\"\n            onClick={this.handleToggleComplete}\n          />\n          <div className=\"item-content\">\n            {this.props.children}\n            {data && data.value}\n          </div>\n          <span className=\"todo-delete-btn\" onClick={this.handleDelete}>\n            ×\n          </span>\n        </div>\n      );\n    }\n    // 编辑状态\n    return (\n      <div className=\"todo-list-item\" onDoubleClick={this.handleDoubleClick}>\n        <div className=\"item-content editing\">\n          <input\n            ref={input => (this.input = input)}\n            className=\"item-input\"\n            value={data.value}\n            onChange={this.handleInputChange}\n            autoFocus={true}\n            onKeyUp={this.handleOnKeyUp}\n            onBlur={this.handleOnBlur}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n//注入 actions 导出注入了redux的组件\nexport default connect(\n  state => ({\n    ...state\n  }),\n  actions\n)(Item);\n","import React, { Component } from \"react\";\nimport \"./footer.scss\";\n\nimport actions from \"../../../store/actions\";\nimport { connect } from \"react-redux\";\n\nconst filters = [{\n  type: 'all',\n  text: 'All'\n}, {\n  type: 'active',\n  text: 'Active'\n}, {\n  type: 'completed',\n  text: 'Completed'\n}]\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n\n  this.handleFilter = this.handleFilter.bind(this)\n  this.handleClearComplete = this.handleClearComplete.bind(this)\n\n  }\n\n  handleFilter(type) {\n    this.props.onTabChange(type)\n  }\n\n  handleClearComplete() {\n    this.props.clearCompleted();\n    this.props.onClearComplete();\n  }\n\n  render() {\n    const { leftCount, todos, activeFilter } = this.props;\n    const completedCount = todos.filter(todo => todo.complete).length;\n    return (\n      <footer className=\"todo-list-footer\">\n        <span className=\"todo-count\">\n          {leftCount ? leftCount : \"No\"} item left\n        </span>\n        <div className=\"filter-tabs\">\n        {\n          filters.map(filter => (\n            <button \n              className={filter.type === activeFilter ? 'filter-tab active': 'filter-tab'}\n              onClick={e => this.handleFilter(filter.type)}\n              key={`filter-${filter.type}`}\n            >\n              { filter.text }\n            </button>\n          ))\n        }\n        </div>\n        {\n          completedCount > 0 &&\n          <button\n           className=\"clear-completed\"\n           onClick={this.handleClearComplete}\n          >\n            Clear Completed\n          </button>\n        }\n      </footer>\n    );\n  }\n}\n\n//注入 actions 导出注入了redux的组件\nexport default connect(\n  state => ({\n    ...state\n  }),\n  actions\n)(Footer);\n","import React, { Component } from \"react\";\nimport Item from \"../item/Item\";\nimport Footer from '../footer/Footer'\n\nimport actions from '../../../store/actions'\nimport { connect } from 'react-redux'\n\nimport \"./List.scss\";\n\nconst filters = {\n  all: todos => todos,\n  active: todos => todos.filter(todo => !todo.complete),\n  completed: todos => todos.filter(todo => todo.complete),\n}\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: '',\n\n      activeFilter: 'all',\n      IsInputFocus: false,\n      isCheckAll: false,\n    };\n\n    this.onInputChange = this.onInputChange.bind(this)\n    this.onInputKeyUp = this.onInputKeyUp.bind(this)\n    this.handleAddTodo = this.handleAddTodo.bind(this)\n    this.filteredTodos = this.filteredTodos.bind(this)\n    this.handleToggleTab = this.handleToggleTab.bind(this)\n    this.toggleAllTodos = this.toggleAllTodos.bind(this)\n    this.toggleCheckAll = this.toggleCheckAll.bind(this)\n    this.onClearComplete = this.onClearComplete.bind(this)\n    \n  }\n\n\n\n  onInputChange(e) {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n\n \n  onInputKeyUp(e) {\n    if(e.keyCode !== 13 || !e.target.value){\n      return false;\n    }\n    this.handleAddTodo(e.target.value.trim())\n    \n  }\n\n\n  handleAddTodo(value) {\n    this.props.addTodo({\n      value: value,\n      complete: false,\n      id: new Date().getTime()\n    })\n    this.setState({\n      inputValue : ''\n    })\n  }\n\n  filteredTodos() {\n    const { todos } = this.props\n    const { activeFilter } = this.state\n    return filters[activeFilter](todos) || []\n  }\n\n  toggleAllTodos() {\n    this.props.toggleAllTodos({\n      isCheckAll: this.state.isCheckAll\n    })\n    this.toggleCheckAll()\n  }\n\n  toggleCheckAll() {\n    if(this.props.todos.length === 0){\n      return;\n    }\n    this.setState(state => ({\n      isCheckAll: !state.isCheckAll\n    }))\n  }\n \n\n  handleToggleTab(type) {\n    this.setState({\n      activeFilter: type\n    })\n    this.filteredTodos()\n  }\n\n  onClearComplete() {\n    this.setState({\n      isCheckAll: false\n    })\n  }\n\n  \n  \n\n  render() {\n    const filteredTodos = this.filteredTodos() || [];\n    const { todos } = this.props;\n    const leftCount = filters.active(todos).length\n    return (\n      <div className=\"todo-list\">\n        <i\n          onClick={this.toggleAllTodos}\n          className={`iconfont icon-quanxuan ${\n            this.state.isCheckAll \n             ? 'active'\n             : ''\n          }`}\n        />\n        <input\n          className=\"todo-input\"\n          placeholder=\"What need to do ?\"\n          onKeyUp={this.onInputKeyUp}\n          onChange={this.onInputChange}\n          value={this.state.inputValue}\n        >\n        </input>\n        {\n          filteredTodos.map((item, index) => {\n            return (\n                <Item \n                  key={`item-${index}`}\n                  data={Object.assign(item, {index})}\n                  index={index}\n                >\n                </Item>\n              )\n          })\n        }\n        {\n          this.props.todos.length > 0 &&\n          <Footer \n            activeFilter={this.state.activeFilter}\n            leftCount={leftCount}\n            onTabChange={this.handleToggleTab}\n            onClearComplete={this.onClearComplete}\n          />\n        }\n      </div>\n    );\n  }\n}\n\n//注入 actions 导出注入了redux的组件\nexport default connect(state => ({\n  ...state\n}), actions)(List);\n","import TodoList from './list/List'\n \nexport default TodoList","import React, { Component } from 'react';\nimport './App.scss';\n\nimport TodoList from './components/todo-list'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n       todoList: [],\n      \n    };\n\n  };\n\n \n  \n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"todo-list-title\">\n          Todo List\n        </h1>\n        <TodoList list={this.state.todoList}></TodoList>\n       \n      </div>\n    );\n  }\n\n }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import actionTypes from '../actions/action-types'\nimport { storage } from '../../utils'\n\nfunction setStorage(todos) {\n  storage.setJSON('react_todos', todos)\n}\n\nconst reducer = (state, action) => {\n  const { payload } = action;\n  let todos = []\n  switch (action.type) {\n    case actionTypes.ADD_TODO:\n      todos = [\n        ...state.todos,\n        action.payload\n      ]\n      setStorage(todos);\n\n      return {\n        todos \n      }\n\n    case actionTypes.TOGGLE_COMPLETE:\n      todos = state.todos.map(item => {\n        if(item.id === action.payload.id) {\n          item.complete = !item.complete\n        }\n        return item\n      })\n      setStorage(todos);\n      return {\n        todos\n      }\n\n    case actionTypes.UPDATE_TODO: \n      todos = state.todos.map(item => {\n        if(item.id === payload.id) {\n          item.value = payload.value\n        }\n        return item\n      })\n      setStorage(todos);\n      return {\n        todos\n      }\n\n    case actionTypes.DELETE_TODO: \n      todos = state.todos.filter(item => item.id !== payload.id)\n      setStorage(todos);\n      return { \n        todos\n      }\n\n    case actionTypes.CLEAR_COMPLETE: \n      todos = state.todos.filter(item => !item.complete)\n      setStorage(todos);\n      return  {\n        todos\n      }\n    \n      case actionTypes.TOGGLE_ALL:\n        const { isCheckAll } = payload;\n        todos = state.todos.map(item => {\n          return Object.assign({}, item, {\n            complete: !isCheckAll\n          })\n        })\n        return {\n          todos\n        }\n  \n    default:\n      return state\n  }\n}\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { storage } from '../utils'\nimport reducer from './reducers'\nimport thunk from 'redux-thunk'\n\n\nconst state = {\n  todos: storage.getJSON('react_todos') || []\n}\n\nconst store = createStore(\n  reducer,\n  state,\n  compose(\n    applyMiddleware(thunk),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n  )\n);\n\nexport default store;\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}