{"version":3,"sources":["store/actions/action-types.js","store/actions/index.js","components/todo-list/item/Item.js","components/todo-list/footer/Footer.js","components/todo-list/list/List.js","components/todo-list/index.js","App.js","serviceWorker.js","store/reducers/index.js","store/index.js","index.js"],"names":["action_types","actions","addTodo","payload","type","actionTypes","toggleComplete","updateTodo","deleteTodo","clearCompleted","Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","index","handleDoubleClick","bind","assertThisInitialized","handleInputChange","handleOnBlur","handleDelete","handleToggleComplete","handleOnKeyUp","setState","editing","e","target","value","event","id","data","keyCode","_this2","react_default","a","createElement","className","onDoubleClick","ref","input","onChange","autoFocus","onKeyUp","onBlur","complete","onClick","children","Component","connect","objectSpread","filters","text","Footer","handleFilter","onTabChange","_this$props","leftCount","todos","activeFilter","completedCount","filter","todo","length","map","key","concat","all","active","completed","List","inputValue","IsInputFocus","onItemBlur","onInputBlur","onInputFocus","onInputChange","onInputKeyUp","handleAddTodo","onItemChange","filteredTodos","handleToggleTab","val","trim","Date","getTime","placeholder","onFocus","item","item_Item","assign","footer_Footer","TodoList","App","todoList","todo_list","list","Boolean","window","location","hostname","match","reducer","action","toConsumableArray","store","createStore","compose","applyMiddleware","thunk","devToolsExtension","f","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5597f2c.chunk.js","sourcesContent":["export default {\n  ADD_TODO : 'ADD_TODO',\n  TOGGLE_COMPLETE : 'TOGGLE_COMPLETE',\n  UPDATE_TODO :'UPDATE_TODO',\n  DELETE_TODO: 'DELETE_TODO',\n  CLEAR_COMPLETE: 'CLEAR_COMPLETE'\n}","import actionTypes from './action-types'\n\nconst actions = {\n  addTodo: (payload) => {\n    return {\n      type: actionTypes.ADD_TODO,\n      payload\n    }\n  },\n\n\n  toggleComplete: (payload) => {\n    return {\n      type: actionTypes.TOGGLE_COMPLETE,\n      payload\n    }\n  },\n\n  updateTodo: (payload) => {\n    return {\n      type: actionTypes.UPDATE_TODO,\n      payload\n    }\n  },\n\n  deleteTodo: (payload) => {\n    return {\n      type: actionTypes.DELETE_TODO,\n      payload\n    }\n  },\n\n  clearCompleted: (payload) => {\n    return {\n      type: actionTypes.CLEAR_COMPLETE,\n      payload\n    }\n  }\n\n}\n\nexport default actions;","import React, { Component } from \"react\";\nimport \"./item.scss\";\nimport actions from \"../../../store/actions\";\nimport { connect } from \"react-redux\";\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      index: this.props.index\n    };\n\n    this.handleDoubleClick = this.handleDoubleClick.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleOnBlur = this.handleOnBlur.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleToggleComplete = this.handleToggleComplete.bind(this);\n    this.handleOnKeyUp = this.handleOnKeyUp.bind(this);\n  }\n\n  handleDoubleClick() {\n    this.setState({\n      editing: true\n    });\n  }\n\n  handleOnBlur(e) {\n    this.setState({\n      editing: false\n    });\n    const value = e.target.value;\n    if(value) {\n      this.handleInputChange(e);\n    } else {\n      this.handleDelete()\n    }\n  }\n\n  handleInputChange(event) {\n    this.props.updateTodo({\n      value: event.target.value,\n      id: this.props.data.id\n    });\n  }\n\n  handleDelete() {\n    this.props.deleteTodo(this.props.data);\n  }\n\n  handleToggleComplete() {\n    this.props.toggleComplete(this.props.data);\n  }\n\n  handleOnKeyUp(e) {\n    if (e.keyCode !== 13) {\n      return false;\n    }\n    this.handleOnBlur(e);\n  }\n\n  render() {\n    const { editing } = this.state;\n    const { data } = this.props;\n    // 非编辑状态\n    if (!editing) {\n      return (\n        <div\n          className={\n            this.props.data.complete\n              ? \"todo-list-item checked\"\n              : \"todo-list-item\"\n          }\n          onDoubleClick={this.handleDoubleClick}\n        >\n          <label\n            className=\"item-check-dot\"\n            onClick={this.handleToggleComplete}\n          />\n          <div className=\"item-content\">\n            {this.props.children}\n            {data && data.value}\n          </div>\n          <span className=\"todo-delete-btn\" onClick={this.handleDelete}>\n            ×\n          </span>\n        </div>\n      );\n    }\n    // 编辑状态\n    return (\n      <div className=\"todo-list-item\" onDoubleClick={this.handleDoubleClick}>\n        <div className=\"item-content editing\">\n          <input\n            ref={input => (this.input = input)}\n            className=\"item-input\"\n            value={data.value}\n            onChange={this.handleInputChange}\n            autoFocus={true}\n            onKeyUp={this.handleOnKeyUp}\n            onBlur={this.handleOnBlur}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n//注入 actions 导出注入了redux的组件\nexport default connect(\n  state => ({\n    ...state\n  }),\n  actions\n)(Item);\n","import React, { Component } from \"react\";\nimport \"./footer.scss\";\n\nimport actions from \"../../../store/actions\";\nimport { connect } from \"react-redux\";\n\nconst filters = [{\n  type: 'all',\n  text: 'All'\n}, {\n  type: 'active',\n  text: 'Active'\n}, {\n  type: 'completed',\n  text: 'Completed'\n}]\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n\n  this.handleFilter = this.handleFilter.bind(this)\n\n  }\n\n  handleFilter(type) {\n    this.props.onTabChange(type)\n  }\n\n  render() {\n    const { leftCount, todos, activeFilter } = this.props;\n    const completedCount = todos.filter(todo => todo.complete).length;\n    return (\n      <footer className=\"todo-list-footer\">\n        <span className=\"todo-count\">\n          {leftCount ? leftCount : \"No\"} item left\n        </span>\n        <div className=\"filter-tabs\">\n        {\n          filters.map(filter => (\n            <button \n              className={filter.type === activeFilter ? 'filter-tab active': 'filter-tab'}\n              onClick={e => this.handleFilter(filter.type)}\n              key={`filter-${filter.type}`}\n            >\n              { filter.text }\n            </button>\n          ))\n        }\n        </div>\n        {\n          completedCount > 0 &&\n          <button\n           className=\"clear-completed\"\n           onClick={this.props.clearCompleted}\n          >\n            Clear Completed\n          </button>\n        }\n      </footer>\n    );\n  }\n}\n\n//注入 actions 导出注入了redux的组件\nexport default connect(\n  state => ({\n    ...state\n  }),\n  actions\n)(Footer);\n","import React, { Component } from \"react\";\nimport Item from \"../item/Item\";\nimport Footer from '../footer/Footer'\n\nimport actions from '../../../store/actions'\nimport { connect } from 'react-redux'\n\nimport \"./List.scss\";\n\nconst filters = {\n  all: todos => todos,\n  active: todos => todos.filter(todo => !todo.complete),\n  completed: todos => todos.filter(todo => todo.complete),\n}\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: '',\n\n      activeFilter: 'all',\n      IsInputFocus: false\n    };\n\n    this.onItemBlur = this.onItemBlur.bind(this)\n    this.onInputBlur = this.onInputBlur.bind(this)\n    this.onInputFocus = this.onInputFocus.bind(this)\n    this.onInputChange = this.onInputChange.bind(this)\n    this.onInputKeyUp = this.onInputKeyUp.bind(this)\n    this.handleAddTodo = this.handleAddTodo.bind(this)\n    this.onItemChange = this.onItemChange.bind(this)\n    this.filteredTodos = this.filteredTodos.bind(this)\n    this.handleToggleTab = this.handleToggleTab.bind(this)\n\n    \n  }\n\n  \n  onItemBlur(e, index) {\n    \n  }\n  onItemChange(val, index) {\n  \n  }\n\n  \n\n  onInputBlur(e) {\n    \n  }\n\n  onInputFocus(e) {\n  }\n\n  onInputChange(e) {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n\n \n  onInputKeyUp(e) {\n    if(e.keyCode !== 13 || !e.target.value){\n      return false;\n    }\n    this.handleAddTodo(e.target.value.trim())\n    \n  }\n\n\n  handleAddTodo(value) {\n    this.props.addTodo({\n      value: value,\n      complete: false,\n      id: new Date().getTime()\n    })\n    this.setState({\n      inputValue : ''\n    })\n  }\n\n  filteredTodos() {\n    const { todos } = this.props\n    const { activeFilter } = this.state\n    return filters[activeFilter](todos) || []\n  }\n\n \n\n  handleToggleTab(type) {\n    this.setState({\n      activeFilter: type\n    })\n    this.filteredTodos()\n  }\n\n  \n  \n\n  render() {\n    const filteredTodos = this.filteredTodos() || [];\n    const { todos } = this.props;\n    const leftCount = filters.active(todos).length\n    return (\n      <div className=\"todo-list\">\n        <input \n          className=\"todo-input\"\n          placeholder=\"What need to do ?\"\n          onBlur={this.onInputBlur}\n          onFocus={this.onInputFocus}\n          onKeyUp={this.onInputKeyUp}\n          onChange={this.onInputChange}\n          value={this.state.inputValue}\n        >\n        </input>\n        {\n          filteredTodos.map((item, index) => {\n            return (\n                <Item \n                  key={`item-${index}`}\n                  data={Object.assign(item, {index})}\n                  onBlur={this.onItemBlur}\n                  index={index}\n                  onChange={this.onItemChange}\n                >\n                </Item>\n              )\n          })\n        }\n        {\n          this.props.todos.length > 0 &&\n          <Footer \n            activeFilter={this.state.activeFilter}\n            leftCount={leftCount}\n            onTabChange={this.handleToggleTab}\n          />\n        }\n      </div>\n    );\n  }\n}\n\n//注入 actions 导出注入了redux的组件\nexport default connect(state => ({\n  ...state\n}), actions)(List);\n","import TodoList from './list/List'\n \nexport default TodoList","import React, { Component } from 'react';\nimport './App.scss';\n\nimport TodoList from './components/todo-list'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n       todoList: [],\n      \n    };\n\n  };\n\n \n  \n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"todo-list-title\">\n          Todo List\n        </h1>\n        <TodoList list={this.state.todoList}></TodoList>\n       \n      </div>\n    );\n  }\n\n }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import actionTypes from '../actions/action-types'\n\n\nconst reducer = (state, action) => {\n  const { payload } = action;\n\n  switch (action.type) {\n    case actionTypes.ADD_TODO:\n      return {\n        todos: [\n          ...state.todos,\n          action.payload\n        ]\n      }\n\n    case actionTypes.TOGGLE_COMPLETE:\n      return {\n        todos: state.todos.map(item => {\n          if(item.id === action.payload.id) {\n            item.complete = !item.complete\n          }\n          return item\n        })\n      }\n\n    case actionTypes.UPDATE_TODO: \n      return {\n        todos: state.todos.map(item => {\n          if(item.id === payload.id) {\n            item.value = payload.value\n          }\n          return item\n        })\n      }\n\n    case actionTypes.DELETE_TODO: \n      return { \n        todos: state.todos.filter(item => item.id !== payload.id)\n      }\n\n    case actionTypes.CLEAR_COMPLETE: \n      return  {\n        todos: state.todos.filter(item => !item.complete)\n      }\n  \n    default:\n      return state\n  }\n}\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport reducer from './reducers'\nimport thunk from 'redux-thunk'\n\nconst state = {\n  todos: []\n}\n\nconst store = createStore(\n  reducer,\n  state,\n  compose(\n    applyMiddleware(thunk),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n  )\n);\n\nexport default store;\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}